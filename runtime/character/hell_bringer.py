# This file is generated by generator.py, do not change this file.
# Change hell_bringer config in conf/config.yml instead.
from character.character import Character
from runtime.character.character_class import CharacterClass


class HellBringer(Character):
    Attack = "attack"
    Bloodlust = "bloodlust"
    BloodSword = "blood_sword"
    BloodyTwister = "bloody_twister"
    Derange = "derange"
    Enrage = "enrage"
    GoreCross = "gore_cross"
    ExtremeOverkill = "extreme_overkill"
    MountainousWheel = "mountainous_wheel"
    OutrageBreak = "outrage_break"
    RagingFury = "raging_fury"
    Thirst = "thirst"

    def __init__(self, device, ui_ctx):
        super().__init__(device, ui_ctx, CharacterClass.HellBringer)
        self.attack = self.register_skill(
            HellBringer.Attack,
            {
                "type": "touch",
                "duration": 1,
                "cool_down": 0,
                "exec_limit": {"min_distance": 330},
            },
        )
        self.bloodlust = self.register_skill(
            HellBringer.Bloodlust,
            {
                "type": "touch",
                "duration": 0.2,
                "cool_down": 8,
                "exec_limit": {"min_distance": 200},
            },
        )
        self.blood_sword = self.register_skill(
            HellBringer.BloodSword,
            {
                "type": "touch",
                "duration": 1,
                "cool_down": 1,
                "exec_limit": {"min_distance": 10},
            },
        )
        self.bloody_twister = self.register_skill(
            HellBringer.BloodyTwister,
            {
                "type": "touch",
                "duration": 5,
                "cool_down": 1,
                "exec_limit": {"min_distance": 10},
            },
        )
        self.derange = self.register_skill(
            HellBringer.Derange,
            {
                "type": "swipe_right",
                "coordinate": [1860, 926],
                "duration": 0.8,
                "cool_down": 1,
                "delay": 0.2,
                "exec_limit": {"min_distance": 10},
            },
        )
        self.enrage = self.register_skill(
            HellBringer.Enrage,
            {
                "type": "touch",
                "duration": 1,
                "cool_down": 1,
                "exec_limit": {"min_distance": 10},
            },
        )
        self.gore_cross = self.register_skill(
            HellBringer.GoreCross,
            {
                "type": "touch",
                "duration": 0.2,
                "cool_down": 3,
                "exec_limit": {"min_distance": 10},
            },
        )
        self.extreme_overkill = self.register_skill(
            HellBringer.ExtremeOverkill,
            {
                "type": "touch",
                "duration": 1,
                "cool_down": 1,
                "exec_limit": {"min_distance": 10},
            },
        )
        self.mountainous_wheel = self.register_skill(
            HellBringer.MountainousWheel,
            {
                "type": "touch",
                "duration": 0.1,
                "cool_down": 1,
                "exec_limit": {"min_distance": 600},
            },
        )
        self.outrage_break = self.register_skill(
            HellBringer.OutrageBreak,
            {
                "type": "touch",
                "duration": 2.1,
                "cool_down": 1,
                "exec_limit": {"min_distance": 10},
            },
        )
        self.raging_fury = self.register_skill(
            HellBringer.RagingFury,
            {
                "type": "touch",
                "duration": 1,
                "cool_down": 1,
                "exec_limit": {"min_distance": 10},
            },
        )
        self.thirst = self.register_skill(
            HellBringer.Thirst,
            {
                "type": "swipe_left",
                "coordinate": [1860, 926],
                "duration": 0.5,
                "cool_down": 1,
                "delay": 0.2,
                "exec_limit": {"min_distance": 10},
            },
        )
